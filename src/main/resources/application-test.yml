server:
  port: 8080
  servlet:
    context-path: "/api/v1"

spring:
  application:
    name: test-app
  config:
    activate:
      on-profile: test

  flyway:
    enabled: false
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    user: sa
    baseline-on-migrate: true
    locations: classpath:db/test

  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
    driver-class-name: org.h2.Driver
    username: sa
    password:

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    open-in-view: off

  sql:
    init:
      mode: always

  security:

    user:
      name: admin
      password: admin
    jwt:
      access:
        secret-key: jwt-access-secret-test
        expiration-in-minutes: 15
      refresh:
        secret-key: jwt-refresh-secret-test
        expiration-in-days: 7

  cloud:
    config:
      aws:
        credentials:
          access-key: ${AWS_ACCESS_KEY}
          secret-key: ${AWS_SECRET_KEY}
        s3:
          region: ${AWS_S3_REGION:us-east-1}
          bucket: ${AWS_S3_BUCKET}

  xendit:
    secret-key: ${XENDIT_SECRET_KEY}
    webhook-verification-token: ${XENDIT_VERIFICATION_TOKEN}
    redirect:
      success-url: https://localhost:8080/api/v1/webhook/payment
      failure-url: https://localhost:8080/api/v1/webhook/payment

  jackson:
    property-naming-strategy: SNAKE_CASE

  cache:
    type: redis
    redis:
      use-key-prefix: true
      key-prefix: app

  data:
    redis:
      host: localhost
      database: 0
      port: 6379
      repositories:
        enabled: false

  mailtrap:
    token: ${MAILTRAP_TOKEN}
    sender-email: ${MAILTRAP_SENDER_EMAIL}
    template:
      verification_email_id: ${MAILTRAP_TEMPLATE_VERIFICATION_EMAIL_ID}
      verification_url: http://localhost:8080/api/v1/auth/verify

  totp:
    global-secret: test-global-secret
    expiration-in-minutes: 5




bucket4j:
  enabled: true
  key-prefix: "buckets"
  redis-address: redis://localhost:6379
  filters:
    - cache-name: auth
      url: .*/auth/register
      rate-limits:
        - cache-key: getRemoteAddr()
          bandwidths:
            - capacity: 20
              initial-capacity: 30
              time: 60
              unit: seconds
              refill-speed: interval
              refill-capacity: 5

    - cache-name: auth
      url: .*/auth/login
      rate-limits:
        - cache-key: getRemoteAddr()
          bandwidths:
            - capacity: 20
              initial-capacity: 30
              time: 60
              unit: seconds
              refill-speed: interval
              refill-capacity: 5

    - cache-name: auth
      filter-order: 150
      url: .*/auth/resend-verification
      rate-limits:
        - cache-key: "@securityService.username()"
          bandwidths:
            - capacity: 5
              time: 60
              unit: seconds

    - cache-name: auth
      url: .*/order/checkout
      filter-order: 150
      rate-limits:
        - cache-key: "@securityService.username()"
          bandwidths:
            - capacity: 50
              initial-capacity: 100
              time: 60
              unit: seconds
              refill-speed: interval
              refill-capacity: 10
      http-content-type: application/json

springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

logging:
  level:
    org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer: ERROR


